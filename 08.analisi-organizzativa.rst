Analisi organizzativa della community OS
=========================================

Obiettivi della Community

Gli obiettivi che la community vuole raggiungere sono orientati a:

-  **connessione:**\ creare una miglior connessione tra i membri della
   community

-  **scambio:**\ valorizzare la discussione e gli scambi di idee e delle
   conoscenze sulle tematiche inerenti il Taccuino

-  **partecipazione:**\ favorire discussioni e contributi da parte di
   utenti normalmente “esterni” ai normali progetti istituzionali della
   PA attraverso la messa a disposizione di strumenti di collaboration
   come forum, chat, issue e pull request management

Gli obiettivi sopra elencati sono tesi a creare “valore” informativo e
in termini di software proveniente dall’eterogeneità e complementarietà
di competenze che possono caratterizzare i membri che partecipano alla
Community.

Struttura e caratteri organizzativi

Analizzando il sistema organizzativo della Community, come modello di
governo si può ipotizzare la necessità di un **Team di governance della
Community**, che si occupa di governare la Community in base agli
obiettivi, alle linee di indirizzo e alle strategie definite dallo
Steering Committee (definito nel capitolo
`Strategie <#_f6f2ogjfbtc>`__). Ha la responsabilità di perseguire gli
obiettivi di fondo della fase attuativa del progetto di evoluzione del
Taccuino effettuando scelte organizzative atte a declinare le strategie
in piani operativi e a gestire, in modo coerente con i risultati attesi,
le relazioni tra i vari stakeholder. Gli stakeholder da coinvolgere
vengono definiti dallo Steering Committee.

La community per il Taccuino dovrà essere un **sistema
organizzato,**\ che si immagina strutturato\ **per funzioni:**

-  *Team di Governance,*\ gruppo del software maintainer che definisce
   gli obiettivi operativi e ne controlla il raggiungimento;

-  *team di produzione software* afferenti anche a enti differenti,
   responsabili di specifici moduli applicativi in base all’architettura
   del software oggetto di realizzazione;

-  *contributor*, soggetti che contribuiscono alla realizzazione,
   correzione ed evoluzione del software;

-  *software maintainer*, responsabile esecutivo della gestione del
   software incaricato dalla Regione Piemonte in qualità di titolare del
   software e maintainer come previsto dalle “Linee guida su
   acquisizione e riuso di software per le pubbliche amministrazioni”;

-  *community manager/project manager* del software maintainer che si
   occupa della gestione del progetto e della Community

-  *team di marketing e comunicazione* per lo sviluppo e la promozione
   della Community

-  *legale & sicurezza* per la gestione delle tematiche legali e
   specifiche della sicurezza informatica

|image33|

Nell’organizzazione della community è fondamentale la figura del
*Project Manager* a cui è assegnato il compito di curare il
*coordinamento interfunzionale*. Tale figura viene di fatto arricchita
dando una connotazione più estesa e orientata alla gestione diretta e
attiva della Community fornendo un profilo interdisciplinare di raccordo
tra il mondo tecnologico e quello di marketing/promozione della
Community. Di fatto, il Project Manager si trasforma in **Community
Manager**.

Tale figura ha il compito di:

-  gestire e coordinare le iniziative progettuali

-  facilitare, collaborando con la funzione del **Marketing**\ e della
   **Comunicazione**, l’attuazione delle strategie di business definite
   dallo Steering Committee, e in particolare quelle di engagement degli
   stakeholder. Ha inoltre il compito di riportare lo stato di
   coinvolgimento di tutti i portatori di interesse al vertice
   strategico riassumendo i feedback ricevuti e le esigenze emergenti
   dalla Community (issue e pull request).

In figura sono mostrati più **team di Produzione** suddivisi in base ai
moduli software che compongono il sistema complessivo e in funzione
delle specializzazioni tecniche e tecnologiche richieste per
l’esecuzione del lavoro.

Si definisce pertanto:

-  *una produzione dedicata alla realizzazione degli interventi software
   relativi al sistema regionale di Taccuino correlato al più ampio
   ambito di FSE regionale*. Il software può essere progettato in modo
   modulare affinché sia possibile:

   -  pubblicare l’interfaccia PWA del Taccuino compresa nel portale di
      servizi della sanità online della Regione Piemonte

   -  pubblicare il back applicativo del Taccuino dichiarando le
      dipendenze software con funzionalità core del FSE oggi non ancora
      pubblicate in OS.

   -  pubblicare le API rest utilizzabili dalle APP regionali e dalla
      PWA del Taccuino

-  *una produzione dedicata alla realizzazione di un’app
   IOS*\ scaricabile dall’Apple Store in grado acquisire i dati
   provenienti dai dispositivi biomedicali e inviarli al sistema di
   Taccuino;

-  *una produzione dedicata alla realizzazione di un’app
   Android*\ scaricabile dallo store Google Play per fornire
   un’alternativa alla app del punto precedente in base allo smartphone
   in possesso dell’utente finale.

Ogni produzione raccoglie le competenze diverse e necessarie per la
realizzazione del modulo software di cui responsabile.

Ogni Team di produzione gestisce i contributi provenienti da utenti
della community rispetto al modulo software di cui ha responsabilità
(siano essi inseriti come pull request o issue).

Strategicamente, in continuità con il passato, si prevede che venga
assegnata al CSI-Piemonte la **funzione di software maintainer**, la
produzione degli interventi software relativi al sistema regionale di
Taccuino per assicurare tutte le funzionalità di base utili ad erogare
il servizio online verso i cittadini e gli operatori sanitari secondo
normativa. Le funzionalità più verticali e specializzate per
acquisizione dei dati dai device vengono suddivise nelle altre due
produzioni sopra descritte.

Come delineato nel capitolo `Modalità di integrazione dei
device <#_8dnz78msojq0>`__ i contributori possono essere vendor di
device o liberi sviluppatori interessati al progetto.

 In generale, i contributi devono essere sottoposti a verifica formale
da parte del software maintainer, che opera per conto del Titolare del
software (Regione Piemonte), al fine di garantire un prodotto software
in grado di fornire:

-  la corretta gestione dei dati personali e sanitari da un punto di
   vista della privacy

-  la conformità del software al GDPR

-  l’interpretazione corretta dei dati sanitari provenienti dai device.

La **funzione del Legale** ha il compito di fornire supporto trasversale
per la gestione delle problematiche inerenti la definizione delle
licenze del software prodotto dalla community e per la verifica della
license compatibility. Si occupa infine di chiarire i rapporti
contrattuali con i vendor di device che intendono fornire contributi
software nell’ambito della realizzazione di componenti specifiche delle
app IOS e Android.

La **funzione della Sicurezza** ha il compito di fornire supporto per le
tematiche specifiche che possono insorgere in tema di protezione dei
dati personali e sanitari.

Per le **funzioni trasversali**\ meno inerenti alla gestione del
software come ad esempio logistica, gestione delle risorse umane,
amministrazione, la Community si avvale direttamente delle risorse dei
singoli soggetti partecipanti alla stessa Community. Per esempio, le
risorse umane e materiali dei gruppi di produzione sopracitate vengono
acquisite e assegnate alla Community direttamente dalle aziende e dagli
enti responsabili della realizzazione della componente software.

Al netto del vertice strategico la **struttura organizzativa per
funzioni della community** deve avere un **basso livello di
stratificazione** per consentire di ridurre la portata dei problemi di
coordinamento, instaurando un approccio paritetico e snello fra i
soggetti partecipanti del livello operativo volto a:

-  reagire con rapidità ed economicità alla variazione dei fattori
   contingenti

-  favorire la realizzazione dei risultati operativi nel rispetto degli
   obiettivi di fondo della Community al posto dei meri risultati
   funzionali

-  adottare un’ottica orizzontale orientata ad un approccio per processi
   come descritto di seguito.

Un organizzazione per funzioni di questo tipo permette inoltre di avere
la possibilità di **scalare verticalmente e orizzontalmente** in termini
di risorse impiegate in funzione delle necessità emergenti.

Approccio per processi

Adottare un approccio per processi su una struttura organizzativa come
quella descritta per la community è di estrema utilità in considerazione
delle caratteristiche del contesto in cui opera:

-  forte competizione nel mercato dei device,

-  complessità elevata

-  progresso tecnologico continuo.

Il mercato dei dispositivi che si possono integrare con il taccuino del
FSE infatti è molto dinamico e volto a fornire una sempre più ampia
offerta di funzionalità evolute e user friendly per creare e soddisfare
nuove esigenze degli utenti utilizzatori.

Il **fattore critico di successo**\ risulta quindi essere la
realizzazione di un sistema regionale di Taccuino in grado di adattarsi
alle esigenze che emergono e ai dispositivi rilasciati da un mercato
molto variegato e ricco di elementi innovativi.

|image34|

**Tratto da corso di Organizzazione Aziendale di R. Candiotto,
riadattato per il presente Project Work**

Un processo parte intrinsecamente dal presupposto di soddisfare le
aspettative del cliente sia esterno sia interno in quanto il cliente è
il fruitore dei risultati (outcomes) del processo stesso. Una
combinazione di processi porta ad identificare una *catena di
fornitori-clienti (interni ed esterni)*\ che inevitabilmente pongono
vincoli e modalità nella realizzazione delle attività previste.

Di conseguenza adottare un approccio a processi consente alla Community
di raggiungere i propri obiettivi:

-  organizzando le attività in processi evidenziando i legami logici e
   temporali che intercorrono tra le attività stesse e fra i differenti
   processi,

-  definendo gli input e le competenze necessarie per lo svolgimento
   delle attività,

-  assegnando in modo chiaro le responsabilità nei vari step del
   processo,

-  individuando gli outcome dei processi in termini di risultati attesi
   in modo chiaro e misurabile per consentire il monitoraggio e il
   controllo delle performance del processo e quindi individuare le
   eventuali azioni correttive necessarie per il raggiungimento
   dell’efficacia richiesta.

L’approccio per processi consente pertanto di *reagire in funzione dei
fattori contingenti* e perseguire allo stesso tempo l’efficienza
economica e l’efficacia organizzativa in coerenza con gli obiettivi
strategici.

Il sistema dei processi fornisce di fatto uno strumento di attuazione
dell’organizzazione di soggetti differenti all’interno della Community
in modo tale da definire le attività e assegnare *le responsabilità in
modo chiaro ed univoco*. I processi, che compongono il sistema dei
processi per essere davvero utili e di supporto all’attuazione, devono
essere condivisi con tutti i partecipanti della community attraverso la
messa a disposizione di documenti che li descrivono.

Mappa dei processi

Nell’ambito della Community si può definire un mappa dei processi
strutturata secondo le tipologie definite da Earl e Khan nel 1994
nell’articolo “how new is business process redesign” pubblicato nel
European Management Journal. I **processi core** sono quelli
fondamentali e primari per il funzionamento della Community e sono
strettamente correlati a quelli di **business network** che si
sviluppano con i clienti e i fornitori e quindi di fatto si relazionano
con i soggetti esterni della Community.

I **processi di supporto** sono invece quei processi che consentono di
rendere possibili quelli core e forniscono in generale “valore” ai
processi delle altre categorie.

I **processi di management**\ riguardano la pianificazione, il
monitoraggio, l’elaborazione e il controllo delle risorse e delle
strategie della Community.

|image35|

Si descrivono sinteticamente di seguito i principali processi
individuati per ogni tipologia:

-  **processi di management**

   -  sviluppo e gestione delle strategie della community - processi
      volti alla pianificazione, monitoraggio e controllo delle
      strategie in funzione degli obiettivi di fondo prefissati nella
      mission della community e dei report di avanzamento delle attività
      progettuali e dei feedback provenienti dai suoi partecipanti,
      dalla soddisfazione degli utenti, del cliente/promotore del
      progetto (Regione Piemonte) e degli utilizzatori del sistema
      (cittadini e operatori sanitari).

   -  gestione delle risorse della community.

-  **processi core**

   -  project management - processi che hanno l’obiettivo di assicurare
      uno svolgimento efficace ed efficiente del progetto durante il suo
      ciclo di vita: avvio, pianificazione, esecuzione, monitoraggio &
      controllo e chiusura.

   -  sviluppo software - processi di gestione del ciclo di vita del
      software con particolare attenzione alla delivery pipeline del
      software in relazione all’uso di un code hosting pubblico.

   -  gestione delle evoluzioni software - processi per condividere
      questioni inerenti il software e in particolare per la gestione di
      richieste di modifica di:

      -  funzionalità del sistema

      -  codice sorgente

      -  revisione architetturale del software.

-  **processi di business network in entrata**

   -  gestione dei contributor, volti a definire le modalità di:

      -  arruolamento (spontanea o a seguito di campagne di
         comunicazione)

      -  gestione e valutazione dei contributi di questa tipologia
         particolare di “fornitore” della community.

Tali contributi possono essere relativi a:

-  

   -  

      -   modifiche software attraverso pull request

      -  condivisione di idee, approfondimento di tematiche di business
         e di analisi e progettazione software attraverso la gestione di
         issue.

      -  segnalazioni di sicurezza e vulnerabilità software attraverso
         la notifiche delle stesse secondo le modalità definite nelle
         **Responsible Disclosure Policy**

Pull request e Issue vengono gestiti da strumenti che vengono resi
disponibili nella piattaforma di code hosting GitHub. Per maggiori
dettagli fare riferimento al capitolo `Strumenti di interazione per gli
utenti della Community <#_hu9bddmya7ms>`__

-  **processi di business network in uscita**

   -  gestione dei feedback dei contributori - processi per rilevare il
      livello di soddisfazione e le nuove esigenze attraverso la
      gestione e l’analisi di issue e pull request.

   -  gestione del cliente - processi per rilevare il livello di
      soddisfazione e le nuove esigenze del cliente/promotore del
      progetto (Regione Piemonte) e degli utilizzatori del sistema
      (cittadini e operatori sanitari) anche attraverso la valutazione
      dei feedback pervenuti sui canali standard di assistenza previsti
      sui servizi sanitari online della Regione Piemonte.

   -  erogazione del servizio Taccuino - processi utili all’erogazione
      del servizio Taccuino (customer service desk per how-to-use,
      supporto specialistico, trattamento dei dati puntuali e massivi,
      etc) evoluti e integrati con le specificità del contesto della
      Community OS

-  **processi di supporto**

   -  gestione delle infrastrutture software - processi di gestione del
      code hosting, processi di gestione degli ambienti di deploy del
      software (sviluppo, test, staging e produzione).

   -  promozione della community - processi volti alla comunicazione
      dell’iniziativa, processi di gestione degli eventi di promozione
      della community, di diffusione della community tramite l’uso di
      social network, etc

   -  change management - processi a supporto del cambiamento per
      agevolare la promozione e la gestione della Community da parte dei
      soggetti partecipanti non abituati a questo nuovo sistema
      organizzativo e per favorire l’adozione delle nuove modalità di
      lavoro all’interno della community da un punto di vista
      tecnologico (ad esempio l’uso del code hosting, issue e pull
      request).